version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:17.4-alpine3.21
    container_name: paydusa_db
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-paydusa_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-strongpass123}
      - POSTGRES_DB=${POSTGRES_DB:-paydusa_db}
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - paydusa_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-paydusa_user} -d ${POSTGRES_DB:-paydusa_db}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7.2-alpine
    container_name: paydusa_redis
    restart: unless-stopped
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - paydusa_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Paydusa Application (All-in-One)
  app:
    build:
      context: .
      dockerfile: Dockerfile.simple
    container_name: paydusa_app
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://${POSTGRES_USER:-paydusa_user}:${POSTGRES_PASSWORD:-strongpass123}@postgres:5432/${POSTGRES_DB:-paydusa_db}
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=${JWT_SECRET:-your-super-secret-jwt-key-here}
      - COOKIE_SECRET=${COOKIE_SECRET:-your-super-secret-cookie-key-here}
      - PAYLOAD_SECRET=${PAYLOAD_SECRET:-your-super-secret-payload-key-here}
      - MEDUSA_BACKEND_URL=http://localhost:9000
      - NEXT_PUBLIC_MEDUSA_BACKEND_URL=${NEXT_PUBLIC_MEDUSA_BACKEND_URL:-http://localhost:9001}
      - NEXT_PUBLIC_MEDUSA_PUBLISHABLE_KEY=${NEXT_PUBLIC_MEDUSA_PUBLISHABLE_KEY:-}
    ports:
      - "3001:3000"  # Storefront
      - "9001:9000"  # Medusa API
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - paydusa_network
    volumes:
      - app_uploads:/app/uploads

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  app_uploads:
    driver: local

networks:
  paydusa_network:
    driver: bridge