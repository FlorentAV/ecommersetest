services:
  postgres:
    image: postgres:17.4-alpine3.21
    container_name: ecommerce_db
    restart: on-failure
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-ecom_user_7f29a4}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-strongpass}
      - POSTGRES_DB=${POSTGRES_DB:-postgres_db}
    ports:
      - "5432:5432"
    volumes:
      - ecommerce_data:/var/lib/postgresql/data
    networks:
      - ecommerce_net
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${POSTGRES_USER:-ecom_user_7f29a4} -d ${POSTGRES_DB:-postgres_db}",
        ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7.2-alpine
    container_name: ecommerce_redis
    restart: on-failure
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - ecommerce_net
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  redisinsight:
    image: redislabs/redisinsight:latest
    container_name: ecommerce_redis_ui
    restart: on-failure
    ports:
      - "8001:8001"
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - ecommerce_net

  # Database visualization
  db-viz:
    image: ghcr.io/drizzle-team/gateway:latest
    container_name: db_viz
    restart: always
    ports:
      - "4983:4983"
    environment:
      - PORT=4983
      - STORE_PATH=/app
      - MASTERPASS=admin123
      - DATABASE_URL=postgresql://${POSTGRES_USER:-ecom_user_7f29a4}:${POSTGRES_PASSWORD:-strongpass}@postgres:5432/${POSTGRES_DB:-postgres_db}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - ecommerce_net
    volumes:
      - db_viz_data:/app

volumes:
  ecommerce_data:
    driver: local
  redis_data:
    driver: local
  db_viz_data:
    driver: local

networks:
  ecommerce_net:
    driver: bridge
